{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helder.oliveira\\\\Desktop\\\\Documents\\\\projects\\\\JQuality\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './style.css';\nimport React, { useState, useEffect } from 'react';\nimport ScenarioList from './ScenarioList';\nimport ScenarioForm from './ScenarioForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showDrawer, setShowDrawer] = useState(false); // Controlar o menu lateral\n  const [showScenarios, setShowScenarios] = useState(true); // Controlar a lista de cenários\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    status: 'active'\n  });\n  const [scenarios, setScenarios] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  useEffect(() => {\n    setShowDrawer(false); // Garante que o menu lateral esteja fechado ao carregar\n    fetch('http://localhost:3000/api/scenarios').then(res => {\n      if (!res.ok) {\n        throw new Error('Erro ao buscar cenários');\n      }\n      return res.json();\n    }).then(data => setScenarios(data)).catch(err => console.error('Erro ao buscar cenários:', err));\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (editingId) {\n      try {\n        const response = await fetch(`http://localhost:3000/api/scenarios/${editingId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        const updatedScenario = await response.json();\n        setScenarios(scenarios.map(s => s.id === editingId ? updatedScenario : s));\n        setEditingId(null);\n      } catch (error) {\n        console.error('Erro ao editar cenário:', error);\n      }\n    } else {\n      try {\n        const response = await fetch('http://localhost:3000/api/scenarios', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        const newScenario = await response.json();\n        setScenarios([...scenarios, newScenario]);\n      } catch (error) {\n        console.error('Erro ao criar cenário:', error);\n      }\n    }\n    setFormData({\n      name: '',\n      description: '',\n      status: 'active'\n    });\n    setShowDrawer(false); // Fecha o menu lateral\n  };\n  const handleEdit = id => {\n    const scenario = scenarios.find(s => s.id === id);\n    setFormData({\n      name: scenario.name,\n      description: scenario.description,\n      status: scenario.status\n    });\n    setEditingId(id);\n    setShowDrawer(true); // Abre o menu lateral para edição\n  };\n  const handleDelete = async id => {\n    try {\n      await fetch(`http://localhost:3000/api/scenarios/${id}`, {\n        method: 'DELETE'\n      });\n      setScenarios(scenarios.filter(s => s.id !== id));\n    } catch (error) {\n      console.error('Erro ao excluir cenário:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JQuality Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowDrawer(true),\n        children: \"Create Scenario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowScenarios(!showScenarios),\n        children: showScenarios ? 'Hide Scenarios' : 'Show Scenarios'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), showDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drawer-overlay open\",\n      onClick: () => setShowDrawer(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `drawer ${showDrawer ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drawer-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editingId ? 'Edit Scenario' : 'Create Scenario'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"drawer-close\",\n          onClick: () => setShowDrawer(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScenarioForm, {\n        formData: formData,\n        onChange: handleChange,\n        onSubmit: handleSubmit,\n        editingId: editingId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), showScenarios && /*#__PURE__*/_jsxDEV(ScenarioList, {\n      scenarios: scenarios,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IlC6ia4KnrtlyBFEDMCnuKbgLXA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ScenarioList","ScenarioForm","jsxDEV","_jsxDEV","App","_s","showDrawer","setShowDrawer","showScenarios","setShowScenarios","formData","setFormData","name","description","status","scenarios","setScenarios","editingId","setEditingId","fetch","then","res","ok","Error","json","data","catch","err","console","error","handleChange","e","value","target","handleSubmit","preventDefault","response","method","headers","body","JSON","stringify","updatedScenario","map","s","id","newScenario","handleEdit","scenario","find","handleDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onChange","onSubmit","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/helder.oliveira/Desktop/Documents/projects/JQuality/frontend/src/App.js"],"sourcesContent":["import './style.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport ScenarioList from './ScenarioList';\r\nimport ScenarioForm from './ScenarioForm';\r\n\r\nfunction App() {\r\n  const [showDrawer, setShowDrawer] = useState(false); // Controlar o menu lateral\r\n  const [showScenarios, setShowScenarios] = useState(true); // Controlar a lista de cenários\r\n  const [formData, setFormData] = useState({ name: '', description: '', status: 'active' });\r\n  const [scenarios, setScenarios] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setShowDrawer(false); // Garante que o menu lateral esteja fechado ao carregar\r\n    fetch('http://localhost:3000/api/scenarios')\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error('Erro ao buscar cenários');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => setScenarios(data))\r\n      .catch((err) => console.error('Erro ao buscar cenários:', err));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (editingId) {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/api/scenarios/${editingId}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(formData),\r\n        });\r\n        const updatedScenario = await response.json();\r\n        setScenarios(scenarios.map((s) => (s.id === editingId ? updatedScenario : s)));\r\n        setEditingId(null);\r\n      } catch (error) {\r\n        console.error('Erro ao editar cenário:', error);\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/api/scenarios', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(formData),\r\n        });\r\n        const newScenario = await response.json();\r\n        setScenarios([...scenarios, newScenario]);\r\n      } catch (error) {\r\n        console.error('Erro ao criar cenário:', error);\r\n      }\r\n    }\r\n    setFormData({ name: '', description: '', status: 'active' });\r\n    setShowDrawer(false); // Fecha o menu lateral\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const scenario = scenarios.find((s) => s.id === id);\r\n    setFormData({ name: scenario.name, description: scenario.description, status: scenario.status });\r\n    setEditingId(id);\r\n    setShowDrawer(true); // Abre o menu lateral para edição\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:3000/api/scenarios/${id}`, { method: 'DELETE' });\r\n      setScenarios(scenarios.filter((s) => s.id !== id));\r\n    } catch (error) {\r\n      console.error('Erro ao excluir cenário:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>JQuality Tool</h1>\r\n\r\n      {/* Botões principais */}\r\n      <div className=\"main-buttons\">\r\n        <button onClick={() => setShowDrawer(true)}>Create Scenario</button>\r\n        <button onClick={() => setShowScenarios(!showScenarios)}>\r\n          {showScenarios ? 'Hide Scenarios' : 'Show Scenarios'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Menu lateral */}\r\n      {showDrawer && <div className=\"drawer-overlay open\" onClick={() => setShowDrawer(false)}></div>}\r\n      <div className={`drawer ${showDrawer ? 'open' : ''}`}>\r\n        <div className=\"drawer-header\">\r\n          <h2>{editingId ? 'Edit Scenario' : 'Create Scenario'}</h2>\r\n          <button className=\"drawer-close\" onClick={() => setShowDrawer(false)}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n        <ScenarioForm\r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          editingId={editingId}\r\n        />\r\n      </div>\r\n\r\n      {/* Lista de cenários */}\r\n      {showScenarios && (\r\n        <ScenarioList\r\n          scenarios={scenarios}\r\n          onEdit={handleEdit}\r\n          onDelete={handleDelete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}