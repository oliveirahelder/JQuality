{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helder.oliveira\\\\Desktop\\\\Documents\\\\projects\\\\JQuality\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './style.css';\nimport React, { useState, useEffect } from 'react';\nimport ScenarioList from './ScenarioList';\nimport ScenarioForm from './ScenarioForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showForm, setShowForm] = useState(false); // Controlar o formulário\n  const [showScenarios, setShowScenarios] = useState(true); // Controlar a lista de cenários\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    status: 'active'\n  });\n  //const [loading, setLoading] = useState(true);\n  const [scenarios, setScenarios] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n\n  // const toggleForm = () => {\n  //   setShowForm(!showForm); // Alterna entre mostrar e esconder o formulário\n  // };\n\n  useEffect(() => {\n    setLoading(true);\n    fetch('http://localhost:3000/api/scenarios').then(res => {\n      if (!res.ok) {\n        throw new Error('Erro ao buscar cenários');\n      }\n      return res.json();\n    }).then(data => {\n      setScenarios(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error('Erro ao buscar cenários:', err);\n      setLoading(false);\n    });\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (editingId) {\n      try {\n        const response = await fetch(`http://localhost:3000/api/scenarios/${editingId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        const updatedScenario = await response.json();\n        setScenarios(scenarios.map(s => s.id === editingId ? updatedScenario : s));\n        setEditingId(null);\n        setFormData({\n          name: '',\n          description: '',\n          status: 'active'\n        });\n      } catch (error) {\n        console.error('Erro ao editar cenário:', error);\n      }\n    } else {\n      try {\n        const response = await fetch('http://localhost:3000/api/scenarios', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        const newScenario = await response.json();\n        setScenarios([...scenarios, newScenario]);\n        setFormData({\n          name: '',\n          description: '',\n          status: 'active'\n        });\n      } catch (error) {\n        console.error('Erro ao criar cenário:', error);\n      }\n    }\n  };\n  const handleEdit = id => {\n    const scenario = scenarios.find(s => s.id === id);\n    setFormData({\n      name: scenario.name,\n      description: scenario.description,\n      status: scenario.status\n    });\n    setEditingId(id);\n    setShowForm(true); // Mostra o formulário ao editar\n  };\n  const handleDelete = async id => {\n    try {\n      await fetch(`http://localhost:3000/api/scenarios/${id}`, {\n        method: 'DELETE'\n      });\n      setScenarios(scenarios.filter(s => s.id !== id));\n    } catch (error) {\n      console.error('Erro ao excluir cenário:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JQuality Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(!showForm),\n      children: editingId ? 'Edit Scenario' : showForm ? 'Hide Form' : 'Create Scenario'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(ScenarioForm, {\n      formData: formData,\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      editingId: editingId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowScenarios(!showScenarios),\n      children: showScenarios ? 'Hide Scenarios' : 'Show Scenarios'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), showScenarios && /*#__PURE__*/_jsxDEV(ScenarioList, {\n      scenarios: scenarios,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Kpg69kijMBiaMtJ9zqWj7g53Dfg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ScenarioList","ScenarioForm","jsxDEV","_jsxDEV","App","_s","showForm","setShowForm","showScenarios","setShowScenarios","formData","setFormData","name","description","status","scenarios","setScenarios","editingId","setEditingId","setLoading","fetch","then","res","ok","Error","json","data","catch","err","console","error","handleChange","e","value","target","handleSubmit","preventDefault","response","method","headers","body","JSON","stringify","updatedScenario","map","s","id","newScenario","handleEdit","scenario","find","handleDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","onSubmit","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/helder.oliveira/Desktop/Documents/projects/JQuality/frontend/src/App.js"],"sourcesContent":["import './style.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport ScenarioList from './ScenarioList';\r\nimport ScenarioForm from './ScenarioForm';\r\n\r\nfunction App() {\r\n  const [showForm, setShowForm] = useState(false); // Controlar o formulário\r\n  const [showScenarios, setShowScenarios] = useState(true); // Controlar a lista de cenários\r\n  const [formData, setFormData] = useState({ name: '', description: '', status: 'active' });\r\n  //const [loading, setLoading] = useState(true);\r\n  const [scenarios, setScenarios] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n\r\n  // const toggleForm = () => {\r\n  //   setShowForm(!showForm); // Alterna entre mostrar e esconder o formulário\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch('http://localhost:3000/api/scenarios')\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error('Erro ao buscar cenários');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setScenarios(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Erro ao buscar cenários:', err);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (editingId) {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/api/scenarios/${editingId}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(formData),\r\n        });\r\n        const updatedScenario = await response.json();\r\n        setScenarios(scenarios.map((s) => (s.id === editingId ? updatedScenario : s)));\r\n        setEditingId(null);\r\n        setFormData({ name: '', description: '', status: 'active' });\r\n      } catch (error) {\r\n        console.error('Erro ao editar cenário:', error);\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/api/scenarios', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(formData),\r\n        });\r\n        const newScenario = await response.json();\r\n        setScenarios([...scenarios, newScenario]);\r\n        setFormData({ name: '', description: '', status: 'active' });\r\n      } catch (error) {\r\n        console.error('Erro ao criar cenário:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    const scenario = scenarios.find((s) => s.id === id);\r\n    setFormData({ name: scenario.name, description: scenario.description, status: scenario.status });\r\n    setEditingId(id);\r\n    setShowForm(true); // Mostra o formulário ao editar\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:3000/api/scenarios/${id}`, { method: 'DELETE' });\r\n      setScenarios(scenarios.filter((s) => s.id !== id));\r\n    } catch (error) {\r\n      console.error('Erro ao excluir cenário:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>JQuality Tool</h1>\r\n  \r\n      {/* Botão para alternar o formulário */}\r\n      <button onClick={() => setShowForm(!showForm)}>\r\n        {editingId ? 'Edit Scenario' : showForm ? 'Hide Form' : 'Create Scenario'}\r\n      </button>\r\n  \r\n      {/* Formulário condicional */}\r\n      {showForm && (\r\n        <ScenarioForm\r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          editingId={editingId}\r\n        />\r\n      )}\r\n  \r\n      {/* Botão para alternar a lista de cenários */}\r\n      <button onClick={() => setShowScenarios(!showScenarios)}>\r\n        {showScenarios ? 'Hide Scenarios' : 'Show Scenarios'}\r\n      </button>\r\n  \r\n      {/* Lista de cenários condicional */}\r\n      {showScenarios && (\r\n        <ScenarioList\r\n          scenarios={scenarios}\r\n          onEdit={handleEdit}\r\n          onDelete={handleDelete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}